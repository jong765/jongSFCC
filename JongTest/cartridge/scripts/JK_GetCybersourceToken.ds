/**
* Script file for use in the Script pipelet node.
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*/
var OrderMgr = require('dw/order/OrderMgr');
var SubscriptionFacade = require('int_cybersource/cartridge/scripts/facade/SubscriptionFacade');
var CommonHelper = require('int_cybersource/cartridge/scripts/helper/CommonHelper');
var BillTo_Object = require('int_cybersource/cartridge/scripts/cybersource/Cybersource_BillTo_Object');
var Card_Object = require('int_cybersource/cartridge/scripts/cybersource/Cybersource_Card_Object');
var libCybersource = require('int_cybersource/cartridge/scripts/cybersource/libCybersource');
var dwsvc = require ("dw/svc");
var Logger = require('dw/system/Logger');

function execute( pdict : PipelineDictionary ) : Number
{
	var order = OrderMgr.getOrder("70030225");
	var authRequestId = order.paymentTransaction.custom.requestId;
	var refCode = order.orderNo;

   var CybersourceHelper = libCybersource.getCybersourceHelper();
	var csReference = webreferences.CyberSourceTransaction;
	var serviceRequest = new csReference.RequestMessage();

	CybersourceHelper.convertTrasactionToCustomerProfileService(serviceRequest, authRequestId, refCode);

	var serviceResponse = null;
	// send request
	try{
		var service = dwsvc.ServiceRegistry.get("cybersource.soap.transactionprocessor.generic"); 
		serviceResponse = service.call(serviceRequest);
	}catch(e){
		Logger.error("[subscriptionFacade.ds] Error in subscription request ( {0} )",e.message);
		 return {error:true, errorMsg:e.message};
	}
	
	if(empty(serviceResponse) || serviceResponse.status != "OK"){
		 return {error:true, errorMsg:"empty or error in CreateSubscription response: "+serviceResponse};
	}

   var subscriptionToken = null;

	var serviceResponseObject = serviceResponse.object;
	if ( null != serviceResponseObject.paySubscriptionCreateReply)
	{
		subscriptionToken = serviceResponseObject.paySubscriptionCreateReply.subscriptionID;
		if (!order.paymentInstrument.creditCardToken) {
			order.paymentInstrument.creditCardToken = subscriptionToken;
		}
	}

   return PIPELET_NEXT;
}
