/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*/
importPackage( dw.system );
importPackage( dw.catalog );
importPackage( dw.io );
importPackage( dw.util );
importPackage( dw.web );

function execute( pdict : PipelineDictionary ) : Number
{
    //var testCategory:Category = CatalogMgr.getCategory("gift-guide-2014-womens-blogger-picks");
    var testCategory:Category = CatalogMgr.getCategory("gift-guide-2014-womens-wanelo-gifts");
    
    var fileName:String = File.IMPEX + '/src/bloomreach/CategoryTree_' + StringUtils.formatCalendar(Calendar(),'yyyyMMdd') + '.xml';
	var file : File = new dw.io.File(fileName);
	if(!file.exists()) 
	{
		if(!file.createNewFile())
		{
			logFailure("File "+file.name+" could not be created!");
			return false;
		}
	} 
	
	var fileWriter : FileWriter = new FileWriter(file, "UTF-8");
 	var xmlWriter : XMLStreamWriter = new XMLStreamWriter(fileWriter);
 	
 	xmlWriter.writeStartDocument();
 	xmlWriter.writeStartElement("catalog");
    
    
    writeCategories(testCategory, 1, xmlWriter);
    
    xmlWriter.writeEndElement();
    xmlWriter.writeEndDocument();
 	xmlWriter.close();
 	fileWriter.close();	

   return PIPELET_NEXT;
}

function writeCategories(category:Category, seq:Number, xmlWriter:XMLStreamWriter) {
	
	xmlWriter.writeStartElement("category");
	xmlWriter.writeAttribute("category_id", category.ID);
	xmlWriter.writeAttribute("sequence", seq);

	var categoryName: String = category.displayName;
	if (categoryName.indexOf("&") >= 0){
		categoryName = categoryName.replace(/&/g,'&amp;');
	}
	if (categoryName.indexOf("'") >= 0) {
		categoryName = categoryName.replace(/'/g,'&quot;');
	}
	xmlWriter.writeStartElement("name");
	xmlWriter.writeCharacters(categoryName);
	xmlWriter.writeEndElement(); // name
	
	if (category.parent != null && category.parent.ID != null) {
		var i = 0;
		xmlWriter.writeStartElement("parent_category_id");
		xmlWriter.writeCharacters(category.parent.ID);
		xmlWriter.writeEndElement(); // parent_category_id
	}
	
	xmlWriter.writeStartElement("breadcrumb");
	xmlWriter.writeCharacters(getBreadcrumb(category));
	xmlWriter.writeEndElement(); // breadcrumb
	
	xmlWriter.writeStartElement("url");
	xmlWriter.writeCharacters(URLUtils.http('Search-Show', 'cgid', category.ID).toString().replace("staging.web.pacsun.demandware.net", "www.pacsun.com"));
	xmlWriter.writeEndElement(); // url
	
	xmlWriter.writeStartElement("primary_category");
	xmlWriter.writeCharacters("true");
	xmlWriter.writeEndElement(); // url

	xmlWriter.writeEndElement(); // category
	
	if (category.onlineSubCategories != null && category.onlineSubCategories.length > 0) {
		seq = 0;
		for each(var cat : Category in category.onlineSubCategories) {
			seq = seq + 1;
			writeCategories(cat, seq, xmlWriter);
		}	
	}

}

function getBreadcrumb(category:Category):String {
	if (category.parent != null) {
		return getBreadcrumb(category.parent) + '/' + category.ID;
	}
	else {
		if (category.ID == "root")
			return '';
		else 
			return '/' + category.ID;
	}
}

