/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*/
importPackage(dw.system);
importPackage(dw.rpc);


function execute( args : PipelineDictionary ) : Number
{
	var wdslName : String = "RateService_v9";
	
	try {
		
		// get WebReference from WSDL file name
		var webref : WebReference = webreferences.RateService_v9;	// wsdlName
		
		// get stub
		var stub : Stub = webref.getService('RateService', 'RateServicePort'); 	
		
		// RateRequet
		var accountNumber : String = "510087968";
		var meterNumber : String = "100033271";
		var integratorId : String = null;
		var region = null;
		var localization = null;
		var key : String = "FmlVDcxdbW1L39Xt";
		var password : String = "XEZS0AId5K9Pt1ZiFQMRLQYUe";
		var userCredential = new webref.WebAuthenticationCredential(key, password);
		var webAuthenticationDetail = new webref.WebAuthenticationDetail(userCredential);
		var clientDetail = new webref.ClientDetail(	accountNumber,
           											meterNumber,
           											integratorId,
           											region,
           											localization);
		var transactionDetail = null;
		
		var serviceId : String = "crs";
		var major = 9;
		var intermediate = 0;
		var minor = 0;
		var version = new webref.VersionId(	serviceId,
           									major,
           									intermediate,
           									minor);
		var returnTransitAndCommit = null;
		var carrierCodes = null;
		var variableOptions = null;
		
		var requestedShipment = new webref.RequestedShipment(java.util.Calendar shipTimestamp,
           com.fedex.ws.rate.v9.DropoffType dropoffType,
           com.fedex.ws.rate.v9.ServiceType serviceType,
           com.fedex.ws.rate.v9.PackagingType packagingType,
           com.fedex.ws.rate.v9.Weight totalWeight,
           com.fedex.ws.rate.v9.Money totalInsuredValue,
           com.fedex.ws.rate.v9.Party shipper,
           com.fedex.ws.rate.v9.Party recipient,
           java.lang.String recipientLocationNumber,
           com.fedex.ws.rate.v9.ContactAndAddress origin,
           com.fedex.ws.rate.v9.Payment shippingChargesPayment,
           com.fedex.ws.rate.v9.ShipmentSpecialServicesRequested specialServicesRequested,
           com.fedex.ws.rate.v9.ExpressFreightDetail expressFreightDetail,
           com.fedex.ws.rate.v9.FreightShipmentDetail freightShipmentDetail,
           java.lang.String deliveryInstructions,
           com.fedex.ws.rate.v9.VariableHandlingChargeDetail variableHandlingChargeDetail,
           com.fedex.ws.rate.v9.CustomsClearanceDetail customsClearanceDetail,
           com.fedex.ws.rate.v9.PickupDetail pickupDetail,
           com.fedex.ws.rate.v9.SmartPostShipmentDetail smartPostDetail,
           java.lang.Boolean blockInsightVisibility,
           com.fedex.ws.rate.v9.LabelSpecification labelSpecification,
           com.fedex.ws.rate.v9.ShippingDocumentSpecification shippingDocumentSpecification,
           com.fedex.ws.rate.v9.RateRequestType[] rateRequestTypes,
           com.fedex.ws.rate.v9.EdtRequestType edtRequestType,
           org.apache.axis.types.NonNegativeInteger packageCount,
           com.fedex.ws.rate.v9.RequestedPackageDetailType packageDetail,
           com.fedex.ws.rate.v9.RequestedPackageLineItem[] requestedPackageLineItems);
		
		var request : RateRequest = new webref.RateRequest( webAuthenticationDetail,
															clientDetail,
															transactionDetail,
															version,
															returnTransitAndCommit,
															carrierCodes,
															variableOptions,
															requestedShipment	);
		
		// get response
		var response : RateReply = stub.getRates();
		
		
		return PIPELET_NEXT;
	}
	catch (e)
	{
		Logger.error("Error in JK_SoapWS_Fedex.ds is: " + e);
		return PIPELET_ERROR;
	}		

   	return PIPELET_NEXT;
}
