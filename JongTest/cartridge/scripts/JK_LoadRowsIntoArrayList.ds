/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*    @input NextLineToRead : Number  Next line to read in the file
*    @output EntryList : dw.util.Collection   Entry list
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.io );

function execute( pdict : PipelineDictionary ) : Number
{

	var nextLine = pdict.NextLineToRead;
	
    try {
 		var csvReader : CSVStreamReader = new CSVStreamReader(new FileReader(new File(File.IMPEX +
			"/src/customer/TestSiebelPersonUIdLoad.txt")), "|", '"', nextLine - 1);
	    var entryList : List = new ArrayList();
		var line : Array = null;
		var rowCounter : Number = 1;
		while ((line = csvReader.readNext()) && rowCounter <= 2000) {
			var lineObject : Object = new Object();
			lineObject.emailAddress = line[0];
			lineObject.personUId = line[1];
			entryList.add(lineObject);
			rowCounter = rowCounter + 1;
		}	
		pdict.EntryList = entryList;
    } catch (e) {
    	Logger.error("An error occurred while processing Siebel PersonUID load! emailAddress=" + ", Error: " + e);
    } finally {
    	if (csvReader) csvReader.close();
    }

   return PIPELET_NEXT;
}
