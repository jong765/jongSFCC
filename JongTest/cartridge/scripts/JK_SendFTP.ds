/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*	@input	FeedFilePath :	String
*
*
*/
importPackage( dw.system );
importPackage( dw.catalog );
importPackage( dw.util );
importPackage( dw.io );
importPackage( dw.order );
importPackage( dw.web );
importPackage( dw.net );
importPackage( dw.value );
importPackage( dw.object );


function execute( pdict : PipelineDictionary ) : Number
{
	var feedFilePath : String = pdict.FeedFilePath;
	
	try{
		// FTP file to Criteo
		fileTransfer =  FTPFileTest();
		if (!fileTransfer) Logger.error("FTP error in catalog feed.\n");
	} catch(e) {
		logError(e);
		return PIPELET_ERROR;
	}
	
	return PIPELET_NEXT;
}

function FTPFileTest() : Boolean {
	var ftp : FTPClient = new FTPClient(); 
	ftp.setTimeout(0);
	
	try {
		var hostName = "ftp.popshops.com";
		var userName = "pacsun_rm";
		var password = "SuNPaC2015!#";
		
		if(ftp.connect(hostName, 21, userName, password)) {
			Logger.info('Connected to FTP');
	
			var file : File = new File(File.IMPEX + getCatalogFileName());
		
			if(!file.exists()) {
				return false;
			} else {
				var fileTransfer : Boolean = ftp.putBinary(file.name, file);
				if (!fileTransfer)
					Logger.error("FTP error: " + ftp.getReplyMessage());
				
				ftp.disconnect();
				
				if(fileTransfer == true) {
					return true;
				}
			}
			
			return false;		
		} else {
			Logger.error("FTP error: " + ftp.getReplyMessage());
		}
	} catch(e) {
		logError(e);
		return false;
	}
	return false;
}

function logError(e : Error) {
	var errmsg="Error in line " + e.lineNumber;
	if (e.message) errmsg += ", " + e.message;
	if (e.faultDetail) errmsg += ", " + e.faultDetail;
	errmsg += ", " + e.stack.trim();
		
	Logger.error(errmsg);
}

function getCatalogFileName() : String {
	return '/src/channeladvisor/TestFile.xml';
}