/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*/
importPackage( dw.system );
importPackage( dw.catalog );
importPackage( dw.util );
importPackage( dw.campaign );
importPackage( dw.value );

function execute( args : PipelineDictionary ) : Number
{

    var product:Product = ProductMgr.getProduct("1929645");
    var SalesPrice:Money = product.getPriceModel().getPrice();
    
    var promotionPlan:PromotionPlan = PromotionMgr.activePromotions;
    var PromotionalPrice:Money = dw.value.Money.NOT_AVAILABLE;
    var promos:Collection = promotionPlan.getProductPromotions(product);
    
    for (var p in promos) {
    	var promo:Promotion = promos[p];
    	if (promo.getPromotionClass() != null && promo.getPromotionClass().equals(Promotion.PROMOTION_CLASS_PRODUCT) && !promo.basedOnCoupons && !promo.basedOnSourceCodes) {
    		if (product.optionProduct) {
				PromotionalPrice = promo.getPromotionalPrice(product, product.getOptionModel());
    		}else {	
				PromotionalPrice = promo.getPromotionalPrice(product);
    		}
    	}
    }
    
    var ShowPromoPrice:Boolean = PromotionalPrice.available && SalesPrice.compareTo(PromotionalPrice) != 0;

   return PIPELET_NEXT;
}
