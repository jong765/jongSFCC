/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input PointCut : String
*   @input Field1 : dw.catalog.ProductSearchModel
*   @input Field2 : String
*   @input Field3 : String
*   @input Field4 : String
*   @input Field5 : String
*
*/
importPackage( dw.system );
importPackage( dw.catalog );
importPackage( dw.util );

function execute( pdict : PipelineDictionary ) : Number
{
	var logger : Logger = dw.system.Logger.getLogger("jk-debug", "pipelineDebugHelper.ds");	
	
	var productSearchResult : ProductSearchModel = pdict.Field1;
	var refinements : Collection = productSearchResult.refinements;
	var refinementDefinitions : Collection = refinements.refinementDefinitions;
	var refinementDefinitionIT : Iterator = refinementDefinitions.iterator();
	var refinementDefinition = refinementDefinitionIT.next();
	var refinementValues = refinements.getAllRefinementValues(refinementDefinition);

    logger.debug(pdict.PointCut);
	logger.debug(pdict.Field1);
	logger.debug(pdict.Field2);
	logger.debug(pdict.Field3);
	logger.debug(pdict.Field4);
	logger.debug(pdict.Field5);

   return PIPELET_NEXT;
}
