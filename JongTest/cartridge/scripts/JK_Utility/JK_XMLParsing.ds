/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*    @output CampaignList : dw.util.ArrayList		Campaign list
*	 @output PromotionList : dw.util.ArrayList	Promotion List
*    @output PromotionCampaignAssignment:  dw.util.HashMap	Promotion/Campaign assignments
*
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.io );

function execute( pdict : PipelineDictionary ) : Number
{
	var xmlStream:XMLStreamReader;
	var logger:Logger = Logger.getLogger("feeds", "promotionExport");
	var promotionObj:Object = {};
	var campaignObj:Object = {};
	var promotionCampaignMap:HashMap = new HashMap();
	var promotionList:ArrayList = new ArrayList();
	var campaignList:ArrayList = new ArrayList();
	
    try {
		var xmlStream:XMLStreamReader = new XMLStreamReader(new FileReader(new File(File.IMPEX + "/src/test/TestPromotionExport.xml")));
		var ns : Namespace = new Namespace("http://www.demandware.com/xml/impex/promotion/2008-01-31");
		while (xmlStream.hasNext()) {
			if (xmlStream.next() == XMLStreamConstants.START_ELEMENT) {
				// Campaign
				if (xmlStream.getLocalName() == "campaign") {
					var campaign:XML = xmlStream.getXMLObject();
					var enabled_flag:String = campaign.ns::["enabled-flag"].toString();
					if (enabled_flag == "true") {
						campaignObj = {};
						campaignObj.campaignId = campaign.attribute("campaign-id").toString();
						campaignObj.description = campaign.ns::description.toString();
						campaignObj.start_date = campaign.ns::["start-date"].toString();
						campaignObj.end_date = campaign.ns::["end-date"].toString();
						campaignList.add(campaignObj);
					}
				}
				// Promotion
				if (xmlStream.getLocalName() == "promotion") {
					var promotion:XML = xmlStream.getXMLObject();
					var enabled_flag = promotion.ns::["enabled-flag"].toString();
					if (enabled_flag == "true") {
						promotionObj = {"threshold":"", "amount":"", "percentage":""};
						promotionObj.promotionId = promotion.attribute("promotion-id").toString();
						promotionObj.name = promotion.ns::name.toString();
						var promotionRule:XML = promotion.ns::["order-promotion-rule"];
						var discounts:XMLList = promotionRule.ns::["discounts"].children();
						// ???? can have more than 1 discount?
						for each (var discount:XML in discounts) {
							promotionObj.threshold = discount.ns::threshold.toString();
							promotionObj.amount = discount.ns::amount.toString();
							promotionObj.percentage = discount.ns::percentage.toString();
						}
						promotionList.add(promotionObj);
					}
				}
				// Promiton/Campaign assignment
				if (xmlStream.getLocalName() == "promotion-campaign-assignment") {
					var promotionCampaignAssignment:XML = xmlStream.getXMLObject();
					var promotionId:String = promotionCampaignAssignment.attribute("promotion-id").toString();
					var campaignId:String = promotionCampaignAssignment.attribute("campaign-id").toString();
					promotionCampaignMap.put(promotionId, campaignId);
				}
			}
		}
    } catch(e) {
		Logger.error("Unable to read promotion feed: "+e.message);
		return PIPELET_ERROR;
	} finally {
		if (xmlStream) xmlStream.close();
		var test1 = promotionCampaignMap.get("JK COUPON 10 OFF");
		var ww = 1;
    }
    
    pdict.CampaignList = campaignList;
    pdict.PromotionList = promotionList;
    pdict.PromotionCampaignAssignment = promotionCampaignMap;

   return PIPELET_NEXT;
}
