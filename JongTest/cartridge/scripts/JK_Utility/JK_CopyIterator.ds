/**
* Script file for use in the Script pipelet node.
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*/

'use strict';

var OrderMgr = require('dw/order/OrderMgr');
var ArrayList = require('dw/util/ArrayList');

function execute( args : PipelineDictionary ) : Number
{
    var orderList = new ArrayList();
    var newOrderList = new ArrayList();

    orderList.add1(OrderMgr.getOrder("70033825"));
    orderList.add1(OrderMgr.getOrder("70033826"));
    orderList.add1(OrderMgr.getOrder("70033925"));
    orderList.add1(OrderMgr.getOrder("70033926"));
    orderList.add1(OrderMgr.getOrder("70033927"));

    var orders:Iterator = orderList.iterator();
    var numberOfOrdersToExport = 1;
    var count = 0;

    while(orders.hasNext() && count < numberOfOrdersToExport) {
		var order : dw.order.Order = orders.next();
        newOrderList.add1(order);
        count++;
    }
    

    return PIPELET_NEXT;
}