/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*/
importPackage( dw.system );
importPackage( dw.catalog );
importPackage( dw.util );

function execute( pdict : PipelineDictionary ) : Number
{
    var now:Date = new Date();
	var day = 1000*60*60*24;
    var productIT:SeekableIterator = ProductMgr.queryAllSiteProducts();
    var isNewProduct:Boolean;
    var daysElapsedSinceCreation:Number;
    
    var tempArrayList:List = new ArrayList();
    var tempCounter:Number = 0;
    
    for each(var product:Product in productIT) {
    	tempCounter++;
    	if (tempCounter > 20000) break;
    	if (!product.variant && product.isOnline()) {
			if (product.master) {
				var allVariantsOffline = true;
				for each(var variantProduct:Product in product.variants) {
					if (variantProduct.isOnline()) {
						if (isObsoleteProduct(variantProduct, now, day))
    						//tempArrayList.add(variantProduct.ID);
    						var tempvar2 = 0;
    					else { 
    						allVariantsOffline = false;
    					}
					}
				}
				if (allVariantsOffline)
    				//tempArrayList.add(product.ID);
    				var temp3 = 0;
			} else {
				if (isObsoleteProduct(product, now, day))
					//product.online = false;
					//tempArrayList.add(product.ID);
					var tempvar1 = 0;
				else
					var tempvar = 0;
					//product.online = true;
			}
    	}
    }

	productIT.close();
   return PIPELET_NEXT;
}

function isNewProduct(now:Date, productCreationDate:Date, day:Number):Boolean {
	var daysElapsedSinceCreation = Math.ceil((now.getTime()-productCreationDate.getTime())/(day));
	if (daysElapsedSinceCreation <= 5) {
		return true;
	} else {
		return false;
	}
}

// it is obsolete product if last inventory reset date is greater than 6 months.
function isObsoleteProduct(product:Product, now:Date, day:Number):Boolean {
	var allocationResetDate:Date = product.availabilityModel.inventoryRecord == null ? null: 
								product.availabilityModel.inventoryRecord.getAllocationResetDate();
	if (allocationResetDate != null) {
		var daysElapsedSinceInventoryReset:Number = Math.ceil((now.getTime()-allocationResetDate.getTime())/(day));
		if (daysElapsedSinceInventoryReset > 180)
			return true;
		else 
			return false;
	} else
		return false;
}
