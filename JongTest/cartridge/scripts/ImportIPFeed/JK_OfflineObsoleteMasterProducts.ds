/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input MasterProductIdList : 	dw.util.List   	Master product ID list
*
*/
importPackage( dw.system );
importPackage( dw.catalog );
importPackage( dw.util );

function execute( pdict : PipelineDictionary ) : Number
{
	var masterProductIdList:ArrayList = pdict.MasterProductIdList;
	
    var now:Date = new Date();
	var day = 1000*60*60*24;
    var daysElapsedSinceCreation:Number;
    
    var tempArrayList:ArrayList = new ArrayList();
    
    for each(var productId:String in masterProductIdList) {
    	var product:Product = ProductMgr.getProduct(productId);
    	var allVariantsOffline:Boolean = true;
		for each(var variantProduct:Product in product.variants) {
			if (variantProduct.isOnline()) {
				if (isObsoleteProduct(variantProduct, now, day))
					variantProduct.setOnlineFlag(false);
				else { 
					allVariantsOffline = false;
				}
			}
		}
		if (allVariantsOffline)
			product.setOnlineFlag(false);
    }

   return PIPELET_NEXT;
}

// it is obsolete product if last inventory reset date is greater than 6 months.
function isObsoleteProduct(product:Product, now:Date, day:Number):Boolean {
	var allocationResetDate:Date = product.availabilityModel.inventoryRecord == null ? null: 
								product.availabilityModel.inventoryRecord.getAllocationResetDate();
	if (allocationResetDate != null) {
		var daysElapsedSinceInventoryReset:Number = Math.ceil((now.getTime()-allocationResetDate.getTime())/(day));
		if (daysElapsedSinceInventoryReset > 180 && product.availabilityModel.inventoryRecord.getAllocation() <= 0)
			return true;
		else 
			return false;
	} else
		return false;
}
