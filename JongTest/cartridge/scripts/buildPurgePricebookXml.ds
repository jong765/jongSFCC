/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*    @input PriceBookFileName : String
*    @output ListPriceBook : String
*    @output SalePriceBook : String
*/
importPackage( dw.system );
importPackage( dw.io );
importPackage( dw.catalog );

function execute( pdict : PipelineDictionary ) : Number
{
	var priceBookFileName : String = pdict.PriceBookFileName;
	var inReader : XMLStreamReader;
	var listOutWriter : XMLStreamWriter;
	var saleOutWriter : XMLStreamWriter;
	var nameSpace : String = "http://www.demandware.com/xml/impex/pricebook/2006-10-31";
	
try {
	var inFile : File = new File(File.IMPEX + File.SEPARATOR + "src" + File.SEPARATOR + "purge_pricebook" + File.SEPARATOR + priceBookFileName);
	inReader = new XMLStreamReader(new FileReader(inFile, "UTF-8"));
	
	var listPriceBook : String = File.IMPEX + File.SEPARATOR + "src" + File.SEPARATOR + "purge_pricebook" + File.SEPARATOR + "PurgeListPricebook.xml";
	var listOutFile : File = new File(listPriceBook);
	listOutWriter = new XMLStreamWriter(new FileWriter(listOutFile, "UTF-8"));
	
	var salePriceBook : String = File.IMPEX + File.SEPARATOR + "src" + File.SEPARATOR + "purge_pricebook" + File.SEPARATOR + "PurgeSalePricebook.xml";
	var saleOutFile : File = new File(salePriceBook);
	saleOutWriter = new XMLStreamWriter(new FileWriter(saleOutFile, "UTF-8"));
	
	var priceBookType : String = "";
	
	listOutWriter.writeStartDocument();
	listOutWriter.writeStartElement("pricebooks");
	listOutWriter.writeAttribute("xmlns", nameSpace);
	listOutWriter.writeStartElement("pricebook");
	listOutWriter.writeStartElement("header");
	listOutWriter.writeAttribute("pricebook-id", "pacsun-list-price");
	listOutWriter.writeEndElement(); //header
	listOutWriter.writeStartElement("price-tables");
	
	saleOutWriter.writeStartDocument();
	saleOutWriter.writeStartElement("pricebooks");
	saleOutWriter.writeAttribute("xmlns", nameSpace);
	saleOutWriter.writeStartElement("pricebook");
	saleOutWriter.writeStartElement("header");
	saleOutWriter.writeAttribute("pricebook-id", "pacsun-sale-price");
	saleOutWriter.writeEndElement(); //header
	saleOutWriter.writeStartElement("price-tables");

	while (inReader.hasNext()) {
		
		if (inReader.next() == XMLStreamConstants.START_ELEMENT) {
					
			var localName : String = inReader.getLocalName();
			var attributeName : String = inReader.getAttributeLocalName(0);
			var attributeValue: String = inReader.getAttributeValue(0);
			
			// Price book type
			if (localName == "header" && attributeName == "pricebook-id") {
				if (attributeValue == "pacsun_list_price") {
					priceBookType = "list";
				} else if (attributeValue == "pacsun_sale_price") {
					priceBookType = "sale";
				} else priceBookType = "unidentified";
			}
			
			// ProductId
			if (localName == "price-table" && attributeName == "product-id") {
				var productId : String = attributeValue;
				var product : Product = ProductMgr.getProduct(productId);
				
				// If product does not exist then write to purge xml file
				if (product == null) {
					if (priceBookType == "list") {
						listOutWriter.writeStartElement("price-table");
						  listOutWriter.writeAttribute("product-id" , productId);
						  listOutWriter.writeAttribute("mode", "delete");
						listOutWriter.writeEndElement(); //price-table
					} else if (priceBookType == "sale") {
						saleOutWriter.writeStartElement("price-table");
						  saleOutWriter.writeAttribute("product-id" , productId);
						  saleOutWriter.writeAttribute("mode", "delete");
						saleOutWriter.writeEndElement(); //price-table
					}
				}
			}
		}
	}
} catch(e) {
	Logger.error("Unable to read pricebook feed: ");
	return PIPELET_ERROR;
} finally {
	if (inReader) inReader.close();
	
	listOutWriter.writeEndElement(); //price-tables
	listOutWriter.writeEndElement(); //pricebook
	listOutWriter.writeEndElement(); //pricebooks
	listOutWriter.writeEndDocument();
	listOutWriter.close();
	
	saleOutWriter.writeEndElement(); //price-tables
	saleOutWriter.writeEndElement(); //pricebook
	saleOutWriter.writeEndElement(); //pricebooks
	saleOutWriter.writeEndDocument();
	saleOutWriter.close();
}
   pdict.ListPriceBook = "purge_pricebook" + File.SEPARATOR + "PurgeListPricebook.xml";
   pdict.SalePriceBook = "purge_pricebook" + File.SEPARATOR + "PurgeSalePricebook.xml";

   return PIPELET_NEXT;
}
