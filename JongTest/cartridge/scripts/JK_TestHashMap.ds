/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*/
importPackage( dw.system );
importPackage( dw.util );

function execute( args : PipelineDictionary ) : Number
{
	var logger : Logger = dw.system.Logger.getLogger("jktest-info", "JK_TestHashMap.ds");
	
	/*********************************************************************************/
	/* Iterate through Hashmap
	/*********************************************************************************/
	var prodHashMap : HashMap = new HashMap();
	prodHashMap.put("p1", 1);
	prodHashMap.put("p2", 2);
	prodHashMap.put("p3", 3);
	
	var prodIT : Iterator = prodHashMap.entrySet().iterator();
	
	while(prodIT.hasNext()) {
		var entry : HashMap = prodIT.next();
		var product = entry.getKey();
		var qty = entry.getValue();
		logger.info(product + ", " + qty);
	}
	
	/*********************************************************************************/

    var testMap:HashMap =  new HashMap;
    
    var campaignId:String = "campaign1";
    var promoList:ArrayList = new ArrayList();
    promoList.add("promo1");
    testMap.put(campaignId, promoList);
    
    campaignId = "campaign2";
    if (testMap.containsKey(campaignId)) {
    	promoList = testMap.get(campaignId);
    	promoList.add("promo2");
    	testMap.put(campaignId, promoList);
    } else {
    	promoList = new ArrayList();
    	promoList.add("promo2");
    	testMap.put(campaignId, promoList);
    }

   return PIPELET_NEXT;
}
