/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*/
let MessageDigest = require('dw/crypto/MessageDigest');
let Encoding = require('dw/crypto/Encoding');
let Bytes = require('dw/util/Bytes');

function execute( pdict : PipelineDictionary ) : Number
{
    var secretKey = "12345678901234567890123456789012";
    var signature = "";

    var params = { uuid: "ABCDEFGHIJKLMNO", email: "test@500friends.com" };

    var keys = [];
    for (var key in params) { 
        if (params.hasOwnProperty(key)) { 
            keys.push(key); 
        }
    };
    keys.sort();

    var dataToSign = secretKey;

    for (var i=0; i<keys.length; i++){
        dataToSign += keys[i]+params[keys[i]];
    }

    var encryptor : MessageDigest = new MessageDigest('MD5');
    var hash = Encoding.toHex(encryptor.digestBytes(new Bytes(dataToSign)));

   return PIPELET_NEXT;
}
