/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input EMailSubject  : String  Email subject
*   @input EmailFrom     : String  Email from
*   @input EmailTo       : String  Email to
*   @input EmailCC       : String  Email cc
*   @input EmailBodyText : String  Email body text
*   @input FullFileName  : String  Full file name. For Example: "IMPEX/src/catalog/ip_category_Test.xml"
*
*/
importPackage( dw.system );
importPackage( dw.web );
importPackage( dw.net );
importPackage( dw.io );
importPackage( dw.util );

function execute( pdict : PipelineDictionary ) : Number
{
    var emailSubject : String = pdict.EMailSubject; 
    var emailFrom : String = pdict.EmailFrom;
    var emailTo : String = pdict.EmailTo;
    var emailCC : String = pdict.EmailCC;
    var emailBodyText : String = pdict.EmailBodyText;
    var fullFileName : String  = pdict.FullFileName;
    
    // if no email from, default to "donotreply@demandware.net"
    if (emailFrom == null || empty(emailFrom))
    	emailFrom = "donotreply@demandware.net";
    
    var address = URLUtils.http('JK_SendEmailWithAttachment-Send',
    							"emailSubject",emailSubject,
    							"emailFrom",emailFrom,
    							"emailTo",emailTo,
    							"emailCC",emailCC,
    							"emailBodyText",emailBodyText,
    							"fullFileName",fullFileName);
    try {
    	var client : HTTPClient = new HTTPClient();
    	client.open("GET", address);
    	client.send();
    } catch (e) {
    	Logger.error("Error in SendEmailWithAttachment.ds is: " + e);
		return PIPELET_ERROR;
    }

   return PIPELET_NEXT;
}
